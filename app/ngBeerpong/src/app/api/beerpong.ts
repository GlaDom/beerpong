/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/createGame": {
    /** create a new game */
    post: {
      parameters: {
        body: {
          /** New game to create */
          NewGame: definitions["github_com_gladom_beerpong_pkg_models.NewGame"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["github_com_gladom_beerpong_pkg_models.NewGame"];
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: unknown };
        };
      };
    };
  };
  "/finishGame/:id": {
    put: {
      parameters: {
        path: {
          /** Game Id */
          id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: { [key: string]: unknown };
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: unknown };
        };
      };
    };
  };
  "/getGame": {
    /** Get the current not finished game */
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["github_com_gladom_beerpong_pkg_models.GameResponse"];
        };
        /** Not Found */
        404: {
          schema: { [key: string]: unknown };
        };
      };
    };
  };
  "/updateMatches": {
    put: {
      parameters: {
        body: {
          /** Update Matches */
          MatchUpdateRequest: definitions["github_com_gladom_beerpong_pkg_models.MatchUpdateRequest"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: { [key: string]: unknown };
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: unknown };
        };
      };
    };
  };
  "/updateTeams": {
    put: {
      parameters: {
        body: {
          /** Teams to update */
          Teams: definitions["github_com_gladom_beerpong_pkg_models.TeamUpdateRequest"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: { [key: string]: unknown };
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: unknown };
        };
      };
    };
  };
}

export interface definitions {
  "github_com_gladom_beerpong_pkg_models.Game": {
    amount_of_teams?: number;
    created_at?: string;
    id?: number;
    is_finished?: boolean;
    mode?: number;
    updated_at?: string;
  };
  "github_com_gladom_beerpong_pkg_models.GameResponse": {
    game?: definitions["github_com_gladom_beerpong_pkg_models.Game"];
    matches?: definitions["github_com_gladom_beerpong_pkg_models.Match"][];
    teams?: definitions["github_com_gladom_beerpong_pkg_models.Team"][];
  };
  "github_com_gladom_beerpong_pkg_models.Match": {
    away_team?: string;
    created_at?: string;
    game_id?: number;
    group_number?: string;
    home_team?: string;
    points_away?: number;
    points_home?: number;
    type?: string;
    updated_at?: string;
  };
  "github_com_gladom_beerpong_pkg_models.MatchUpdateRequest": {
    matches?: definitions["github_com_gladom_beerpong_pkg_models.Match"][];
  };
  "github_com_gladom_beerpong_pkg_models.NewGame": {
    game?: definitions["github_com_gladom_beerpong_pkg_models.Game"];
    teams?: definitions["github_com_gladom_beerpong_pkg_models.Team"][];
  };
  "github_com_gladom_beerpong_pkg_models.Team": {
    created_at?: string;
    game_id?: number;
    group_name?: string;
    id?: number;
    points?: number;
    rank?: number;
    team_name?: string;
  };
  "github_com_gladom_beerpong_pkg_models.TeamUpdateRequest": {
    teams?: definitions["github_com_gladom_beerpong_pkg_models.Team"][];
  };
}

export interface operations {}

export interface external {}
