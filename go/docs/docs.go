// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/createGame": {
            "post": {
                "description": "create a new game",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Create a new game",
                "parameters": [
                    {
                        "description": "New game to create",
                        "name": "NewGame",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.NewGame"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.NewGame"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/finishGame/:id": {
            "put": {
                "tags": [
                    "Game"
                ],
                "summary": "Finish the current game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/getGame": {
            "get": {
                "description": "Get the current not finished game",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get game",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.GameResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/updateMatches": {
            "put": {
                "tags": [
                    "Match"
                ],
                "summary": "Update the matches from a specific game",
                "parameters": [
                    {
                        "description": "Update Matches",
                        "name": "MatchUpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.MatchUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/updateMatchesFinal/:id": {
            "put": {
                "tags": [
                    "Match"
                ],
                "summary": "Update the semifinals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/updateMatchesQuaterfinals/:id": {
            "put": {
                "tags": [
                    "Match"
                ],
                "summary": "Update the quaterfinal matches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/updateMatchesRoundOfSixteen/:id": {
            "put": {
                "tags": [
                    "Match"
                ],
                "summary": "Update the round of 16 matches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/updateMatchesSemifinals/:id": {
            "put": {
                "tags": [
                    "Match"
                ],
                "summary": "Update the semifinals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/updateTeams": {
            "put": {
                "tags": [
                    "Teams"
                ],
                "summary": "Update the teams from the actual game",
                "parameters": [
                    {
                        "description": "Teams to update",
                        "name": "Teams",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.TeamUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_gladom_beerpong_pkg_models.Game": {
            "type": "object",
            "properties": {
                "amount_of_teams": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "game_time": {
                    "$ref": "#/definitions/time.Duration"
                },
                "id": {
                    "type": "integer"
                },
                "is_finished": {
                    "type": "boolean"
                },
                "mode": {
                    "type": "integer"
                },
                "referee": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.Referee"
                    }
                },
                "start_time": {
                    "type": "string"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.Team"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_gladom_beerpong_pkg_models.GameResponse": {
            "type": "object",
            "properties": {
                "game": {
                    "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.Game"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.Group"
                    }
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.Match"
                    }
                }
            }
        },
        "github_com_gladom_beerpong_pkg_models.Group": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.Team"
                    }
                }
            }
        },
        "github_com_gladom_beerpong_pkg_models.Match": {
            "type": "object",
            "properties": {
                "away_team": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "group_number": {
                    "type": "string"
                },
                "home_team": {
                    "type": "string"
                },
                "match_id": {
                    "type": "integer"
                },
                "points_away": {
                    "type": "integer"
                },
                "points_home": {
                    "type": "integer"
                },
                "referee": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_gladom_beerpong_pkg_models.MatchUpdateRequest": {
            "type": "object",
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.Match"
                    }
                }
            }
        },
        "github_com_gladom_beerpong_pkg_models.NewGame": {
            "type": "object",
            "properties": {
                "game": {
                    "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.Game"
                }
            }
        },
        "github_com_gladom_beerpong_pkg_models.Referee": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_gladom_beerpong_pkg_models.Team": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "cup_difference": {
                    "type": "integer"
                },
                "cups_get": {
                    "type": "integer"
                },
                "cups_hit": {
                    "type": "integer"
                },
                "game_id": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "points": {
                    "type": "integer"
                },
                "rank": {
                    "type": "integer"
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "github_com_gladom_beerpong_pkg_models.TeamUpdate": {
            "type": "object",
            "properties": {
                "cups_got": {
                    "type": "integer"
                },
                "cups_hitted": {
                    "type": "integer"
                },
                "game_id": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "points_to_add": {
                    "type": "integer"
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "github_com_gladom_beerpong_pkg_models.TeamUpdateRequest": {
            "type": "object",
            "properties": {
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_gladom_beerpong_pkg_models.TeamUpdate"
                    }
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                1,
                1000,
                1000000,
                1000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Gin Swagger Beerpong API",
	Description:      "This is a beerpong server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
